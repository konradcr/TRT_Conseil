security:
    enable_authenticator_manager: true
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
        App\Entity\User:
            algorithm: auto

    providers:
        # used to log Admin, Consultant, Recruiter and Candidate accounts
        chain_provider:
            chain:
                providers: [ app_admin_provider, app_consultant_provider, app_recruiter_provider, app_candidate_provider ]
        app_admin_provider:
            entity:
                class: App\Entity\Admin
                property: email
        app_consultant_provider:
            entity:
                class: App\Entity\Consultant
                property: email
        app_recruiter_provider:
            entity:
                class: App\Entity\Recruiter
                property: email
        app_candidate_provider:
            entity:
                class: App\Entity\Candidate
                property: email
    # used to define permissions according to roles
    role_hierarchy:
        ROLE_ADMIN:         ROLE_USER
        ROLE_CONSULTANT:    ROLE_USER
        ROLE_RECRUITER:     ROLE_USER
        ROLE_CANDIDATE:     ROLE_USER
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: chain_provider
            # used to check if the account is approved
            user_checker: App\Security\UserChecker
            custom_authenticator: App\Security\AppCustomAuthenticator
            logout:
                path: app_logout
                # where to redirect after logout
                # target: app_any_route



    # used to control access according to roles
    access_control:
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/consultant, roles: ROLE_CONSULTANT }
        - { path: ^/recruiter, roles: ROLE_RECRUITER }
        - { path: ^/candidate, roles: ROLE_CANDIDATE }


when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
